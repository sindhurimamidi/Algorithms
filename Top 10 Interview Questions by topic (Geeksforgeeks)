Graph

1. Breadth First Search (BFS)
2. Depth First Search (DFS)
3. Shortest Path from source to all vertices **Dijkstra** 
4. Shortest Path from every vertex to every other vertex **Floyd Warshall**
5. To detect cycle in a Graph **Union Find**
6. Minimum Spanning tree **Prim** 
7. Minimum Spanning tree **Kruskal** 
8. Topological Sort
9. Boggle (Find all possible words in a board of characters)
10. Bridges in a Graph

Linked List

1. Insertion of a node in Linked List (On the basis of some constraints)
2. Delete a given node in Linked List (under given constraints)
3. Compare two strings represented as linked lists
4. Add Two Numbers Represented By Linked Lists
5. Merge A Linked List Into Another Linked List At Alternate Positions
6. Reverse A List In Groups Of Given Size
7. Union And Intersection Of 2 Linked Lists
8. Detect And Remove Loop In A Linked List
9. Merge Sort For Linked Lists
10. Select A Random Node from A Singly Linked List

Dynamic Programming

1. Longest Common Subsequence
2. Longest Increasing Subsequence
3. Edit Distance
4. Minimum Partition
5. Ways to Cover a Distance
6. Longest Path In Matrix
7. Subset Sum Problem
8. Optimal Strategy for a Game
9. 0-1 Knapsack Problem
10. Boolean Parenthesization Problem

Sorting And Searching

1. Binary Search
2. Search an element in a sorted and rotated array
3. Bubble Sort
4. Insertion Sort
5. Merge Sort
6. Heap Sort (Binary Heap)
7. Quick Sort
8. Interpolation Search
9. Find Kth Smallest/Largest Element In Unsorted Array
10. Given a sorted array and a number x, find the pair in array whose sum is closest to x

Tree / Binary Search Tree

1. Find Minimum Depth of a Binary Tree
2. Maximum Path Sum in a Binary Tree
3. Check if a given array can represent Preorder Traversal of Binary Search Tree
4. Check whether a binary tree is a full binary tree or not
5. Bottom View Binary Tree
6. Print Nodes in Top View of Binary Tree
7. Remove nodes on root to leaf paths of length < K
8. Lowest Common Ancestor in a Binary Search Tree
9. Check if a binary tree is subtree of another binary tree
10. Reverse alternate levels of a perfect binary tree

Number Theory

1. Modular Exponentiation
2. Modular multiplicative inverse
3. Primality Test | Set 2 (Fermat Method)
4. Euler’s Totient Function
5. Sieve of Eratosthenes
6. Convex Hull
7. Basic and Extended Euclidean algorithms
8. Segmented Sieve
9. Chinese remainder theorem
10. Lucas Theorem

BIT Manipulation

1. Maximum Subarray XOR
2. Magic Number
3. Sum of bit differences among all pairs
4. Swap All Odds And Even Bits
5. Find the element that appears once
6. Binary representation of a given number
7. Count total set bits in all numbers from 1 to n
8. Rotate bits of a number
9. Count number of bits to be flipped to convert A to B
10. Find Next Sparse Number

String / Array

1. Reverse an array without affecting special characters
2. All Possible Palindromic Partitions
3. Count triplets with sum smaller than a given value
4. Convert array into Zig-Zag fashion
5. Generate all possible sorted arrays from alternate elements of two given sorted arrays
6. Pythagorean Triplet in an array
7. Length of the largest subarray with contiguous elements
8. Find the smallest positive integer value that cannot be represented as sum of any subset of a given array
9. Smallest subarray with sum greater than a given value
10. Stock Buy Sell to Maximize Profit

Stack & Queue

1. Next greater element
2. Balanced parenthesis
3. Stock Span Problem
4. Implement a stack using two queues
5. Implement a queue using two stacks
6. Implement 2 stacks in an array
7. Implement k stacks in an array
8. Implement a special stack that supports getMin() in O(1) time
9. Implement LRU Cache
10. Reverse a Stack

Tree / Binary Search Tree

1. Check if a Binary Tree is BST
2. Convert a given Binary Tree to Doubly Linked List
3. Inorder Tree Traversal without recursion and without stack
4. Level order traversal line by line
5. Construct Tree from given Inorder and Preorder traversals
6. Construct Full Binary Tree from given preorder and postorder traversals
7. Find distance between two nodes of a Binary Tree
8. Two nodes of a BST are swapped, correct the BST
9. Print Left View of a Binary Tree
10. Flatten a binary tree into linked list

Prefix Matching and Sliding Window

1. Equilibrium Index
2. Subarray with 0 sum
3. Subarray with same number of 1s and 0s in a binary array
4. Maximum sum of a subarray of size k
5. Distinct elements in every window of size k
6. Subarray with given sum in an array of positive numbers
7. Minimum element in every window of size k
8. N-bonacci Numbers
9. Longest subsequence of the form 0*1*0* in a binary string
10. Longest Span with same Sum in two Binary arrays

Heaps

1. Median in a stream of integers (running integers)
2. K’th largest element in a stream
3. Sort a nearly sorted (or K sorted) array
4. k largest(or smallest) elements in an array
5. Merge k sorted arrays
6. External Sorting
7. Huffman Decoding
8. Minimum sum of two numbers formed from digits of an array
9. Find smallest range containing elements from k lists
10. Check if a given Binary Tree is Heap

Greedy Algorithms

1. Minimum Number of Platforms Required for a Railway/Bus Station
2. Job Scheduling with two jobs allowed at a time
3. Prim’s Minimum Spanning Tree (MST)
4. Dijkstra’s shortest path algorithm
5. Efficient Huffman Coding for Sorted Input
6. Fractional Knapsack Problem
7. Graph Coloring
8. Greedy Algorithm to find Minimum number of Coins
9. Minimize Cash Flow among a given set of friends who have borrowed money from each other
10. Connect n ropes with minimum cost

Trie

1. Find duplicate rows in a binary matrix
2. Word Break Problem
3. Longest Common Prefix in given set of strings
4. Find the k most frequent words from a file
5. Find shortest unique prefix for every word in a given list
6. Longest prefix matching
7. Find maximum XOR of given integer in a stream of integers
8. Auto-complete feature using Trie
9. Implement a Phone Directory
10. Count of distinct substrings of a string using Suffix Trie

